<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2023/02/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl"><a class="exturl__link"   href="https://hexo.io/" >Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>! This is your very first post. Check <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/" >documentation</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> or you can ask me on <span class="exturl"><a class="exturl__link"   href="https://github.com/hexojs/hexo/issues" >GitHub</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>.</p>

        <h2 id="Quick-Start"   >
          <a href="#Quick-Start" class="heading-link"><i class="fas fa-link"></i></a><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2>
      
        <h3 id="Create-a-new-post"   >
          <a href="#Create-a-new-post" class="heading-link"><i class="fas fa-link"></i></a><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/writing.html" >Writing</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="Run-server"   >
          <a href="#Run-server" class="heading-link"><i class="fas fa-link"></i></a><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/server.html" >Server</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="Generate-static-files"   >
          <a href="#Generate-static-files" class="heading-link"><i class="fas fa-link"></i></a><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/generating.html" >Generating</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>

        <h3 id="Deploy-to-remote-sites"   >
          <a href="#Deploy-to-remote-sites" class="heading-link"><i class="fas fa-link"></i></a><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3>
      <figure class="highlight bash"><div class="table-container"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></div></figure>

<p>More info: <span class="exturl"><a class="exturl__link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>
]]></content>
  </entry>
  <entry>
    <title>hexo个人博客搭建三</title>
    <url>/2023/02/27/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%89/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>hexo个人博客搭建二</title>
    <url>/2023/02/27/hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%BA%8C/</url>
    <content><![CDATA[<figure class="highlight python"><div class="table-container"><table><tr><td class="code"><pre><span class="line">个人快速建站的几种方法：</span><br><span class="line">一、</span><br><span class="line">hexo+gitee/github</span><br><span class="line">本博客采用GitHub，另外申请的付费域名</span><br><span class="line">https://www.namesilo.com</span><br><span class="line">申请之后，删除多余部分只留a记录和cname记录</span><br><span class="line"></span><br><span class="line">二、生成好的pbulic目录传到oss,配置一个备案成功的域名即可访问，也算低成本的考虑方案</span><br><span class="line">hexo+oss 本地备案</span><br><span class="line">三、</span><br><span class="line">购买搬瓦工之类的vps,部署系统+node环境，申请对应的域名</span><br><span class="line">hexo+vps+namesilo</span><br><span class="line">四、参考以下站点，操作</span><br><span class="line">https://www.cnblogs.com/martin-<span class="number">1</span>/p/<span class="number">14934029.</span>html</span><br><span class="line">https://zhuanlan.zhihu.com/p/<span class="number">582629584</span></span><br><span class="line">https://zhuanlan.zhihu.com/p/<span class="number">350760097</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">五、遇到问题</span><br><span class="line">每次配置 custom domain 之后，再次 hexo deploy 之后，custom domain 会被重置失效。</span><br><span class="line">解决方案</span><br><span class="line">在 hexo 生成的博客的 source 目录下新建一个 CNAME 文件，然后在这个文件中填入你的域名，这样就不会每次发布之后，</span><br><span class="line">gitpage 里的 custom domain 都被重置掉啦。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">六、图片导入</span><br><span class="line">本地配置导入typora</span><br><span class="line"></span><br><span class="line">采用“图床”概念，项目中通过绝对路径引入图片信息。</span><br><span class="line">可借助阿里云、腾讯云、路过图床、七牛云等构建自定义图床进行引入</span><br><span class="line"></span><br><span class="line">![](https://raw.githubusercontent.com/orangefei/imgbed/master/WechatIMG12819.png)</span><br><span class="line"></span><br></pre></td></tr></table></div></figure>

]]></content>
      <tags>
        <tag>linux</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搭建个人博客系统</title>
    <url>/2023/02/27/hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<figure class="highlight python"><div class="table-container"><table><tr><td class="code"><pre><span class="line">开始安装Hexo</span><br><span class="line"><span class="number">1</span>、安装hexo</span><br><span class="line"></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line">或者</span><br><span class="line">cnpm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、初始化hexo，新建存储博客的文件夹</span><br><span class="line">hexo init myblog</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>、进入文件夹，安装一下npm</span><br><span class="line">cd myblog</span><br><span class="line">npm install</span><br><span class="line"><span class="number">4</span>、启动服务站点</span><br><span class="line">hexo g </span><br><span class="line">hexo server</span><br><span class="line"><span class="number">5</span>、重要文件注释</span><br><span class="line">——config.yml 网站配置信息</span><br><span class="line">package.json 应用程序信息</span><br><span class="line">scaffolds 模板文件夹（存放文章）</span><br><span class="line">source 存放用户资源文件夹</span><br><span class="line">thems 主题文件夹</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Gitee上建站访问</span><br><span class="line">可在github或者gitee上建站，gitee国内访问快一些</span><br><span class="line"><span class="number">1</span>、新建仓库</span><br><span class="line">格式必须是：用户名+.gitee.io 只有这样，将来要部署到Gite e page的时候，才会被识别，</span><br><span class="line">也就是xxxx.gitee.io，其中xxx就是你注册Gitee的用户名。</span><br><span class="line"><span class="number">2</span>、将hexo博客站点上传到gitee上</span><br><span class="line">这里需要安装一个hexo的上传插件deploy-git</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="number">3</span>、修改hexo配置文件指定仓库路径</span><br><span class="line">可在文件夹中直接打开文件，也可通过vim直接编</span><br><span class="line">找到Deployment加上（注意空格）</span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: 你的仓库路径</span><br><span class="line">  branch: master <span class="comment">#github现在已更改为main</span></span><br><span class="line"><span class="number">4</span>、推送hexo站点文件</span><br><span class="line">之后就可以推送博客站点到gitee上了</span><br><span class="line">推送命令</span><br><span class="line">hexo d</span><br><span class="line">扩展：</span><br><span class="line">其中 hexo clean清除了你之前生成的东西，也可以不加。</span><br><span class="line">hexo generate 顾名思义，生成静态文章，可以用 hexo g缩写</span><br><span class="line">hexo deploy 部署文章，可以用hexo d缩写</span><br><span class="line"></span><br><span class="line">推送中会要求输入gitee的用户名和密码（如果不想每次都输可以配置ssh，我这里就不做演示了）</span><br><span class="line">然后就可以看到gitee上有推上来的文件</span><br><span class="line"><span class="number">5</span>、配置Pages服务</span><br><span class="line">目前我们站点还无法访问需要开启Gitee Pages（gitee需要开启(目前需要四个身份证验证)，github不需要）</span><br><span class="line">审核通过启动我们就可以访问啦。</span><br><span class="line">gitee上传新文件之后，需要手动更新一下，更新后的页面才会生效</span><br><span class="line">标记：如果觉得这个访问路径太长了，我们可以去买一个域名，将该路径绑定到域名上，即可通过域名访问了。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">6</span>、安装插件</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">更换主题 到GitHub上搜索hexo主题或者hero自带的主题https://hexo.io/themes/</span><br><span class="line">创建新的页面</span><br><span class="line">hexo new page about</span><br><span class="line">hexo new page categories</span><br><span class="line">categories:</span><br><span class="line">        - [Linux]</span><br><span class="line">        - [Linux, tools]</span><br><span class="line">        - [Python,web]</span><br><span class="line">        - [Database]</span><br><span class="line"><span class="comment"># 多级分类写法</span></span><br><span class="line"></span><br><span class="line">hexo new page tags</span><br><span class="line">tags:</span><br><span class="line">- jQuery</span><br><span class="line">- 表格</span><br><span class="line">- 表单验证</span><br><span class="line"><span class="comment">#支持这种格式</span></span><br><span class="line"></span><br><span class="line">报错处理</span><br><span class="line">extends ./_layout.pug block content include ./_partials/post/post-<span class="built_in">list</span>.pug <span class="keyword">if</span> theme.post_list.paginate.home include ./_partials/widgets/paginator.pug </span><br><span class="line">npm install hexo-renderer-pug --save</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></div></figure>

]]></content>
      <tags>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title>监控web的ssl状态并告警</title>
    <url>/2023/02/27/%E7%9B%91%E6%8E%A7web%E7%9A%84ssl%E7%8A%B6%E6%80%81%E5%B9%B6%E5%91%8A%E8%AD%A6/</url>
    <content><![CDATA[<figure class="highlight py"><div class="table-container"><table><tr><td class="code"><pre><span class="line">shell示例:</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义网站域名和端口号信息</span></span><br><span class="line"><span class="comment">#WebName=&quot;hrss-main.wdeduc.com&quot;</span></span><br><span class="line">WebName=<span class="string">&quot;www.baidu.com&quot;</span></span><br><span class="line">Port=<span class="string">&quot;443&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过 Openssl 工具获取到当前证书的到期时间</span></span><br><span class="line">Cert_END_Time=$(echo | openssl s_client -servername $&#123;WebName&#125; -connect $&#123;WebName&#125;:$&#123;Port&#125; <span class="number">2</span>&gt; /dev/null | openssl x509 -noout -dates | grep <span class="string">&#x27;After&#x27;</span> | awk -F <span class="string">&#x27;=&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | awk <span class="string">&#x27;&#123;print $1,$2,$4&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将证书的到期时间转化成时间戳</span></span><br><span class="line">Cert_NED_TimeStamp=$(date +%s -d <span class="string">&quot;$Cert_END_Time&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义当前时间的时间戳</span></span><br><span class="line">Create_TimeStamp=$(date +%s)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过计算获取到证书的剩余天数</span></span><br><span class="line">Rest_Time=$(expr $(expr $Cert_NED_TimeStamp - $Create_TimeStamp) / <span class="number">86400</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置告警提示信息</span></span><br><span class="line">echo <span class="string">&quot;$WebName  网站的 SSL 证书还有 $Rest_Time 天后到期idc&quot;</span> &gt; ssl-monitor.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义钉钉机器人的 API 接口</span></span><br><span class="line">WebHook=<span class="string">&#x27;https://oapi.dingtalk.com/robot/send?access_token=20e3ec13&amp;label=idc&amp;msg_type=markdown&#x27;</span></span><br><span class="line"><span class="comment">#idc关键字存放于echo里面才能触发告警</span></span><br><span class="line"><span class="comment"># 通过 Curl 命令来发送 Post 请求</span></span><br><span class="line">curl <span class="string">&quot;$&#123;WebHook&#125;&quot;</span> -H <span class="string">&#x27;Content-Type: application/json&#x27;</span> -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    &quot;msgtype&quot;: &quot;text&quot;,</span></span><br><span class="line"><span class="string">    &quot;text&quot;: &#123; </span></span><br><span class="line"><span class="string">        &quot;content&quot;: &quot;告警通知&#x27;</span><span class="string">&quot;$(cat ssl-monitor.txt)&quot;</span><span class="string">&#x27;&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> &amp;&gt; ssl_check.log                    </span><br></pre></td></tr></table></div></figure>
]]></content>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>title</title>
    <url>/2023/02/26/title/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Linux</category>
        <category>tools</category>
        <category>Python</category>
        <category>web</category>
        <category>Database</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>tools</tag>
        <tag>mysql</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>统计http状态并实现钉钉告警</title>
    <url>/2023/02/27/%E7%BB%9F%E8%AE%A1http%E7%8A%B6%E6%80%81%E5%B9%B6%E5%AE%9E%E7%8E%B0%E9%92%89%E9%92%89%E5%91%8A%E8%AD%A6/</url>
    <content><![CDATA[<figure class="highlight python"><div class="table-container"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line">weblist=url.<span class="built_in">list</span>                      </span><br><span class="line"><span class="keyword">for</span> <span class="built_in">list</span> <span class="keyword">in</span> `cat $weblist|grep -E -v <span class="string">&quot;#|^$&quot;</span>`               </span><br><span class="line">do</span><br><span class="line">httpcode=`curl -o /dev/null -s -w %&#123;http_code&#125; <span class="string">&quot;$list&quot;</span>`        </span><br><span class="line">httptime=`curl -o /dev/null -s -w <span class="string">&quot;time_connect: %&#123;time_connect&#125;\ntime_starttransfer: %&#123;time_starttransfer&#125;\ntime_total: %&#123;time_total&#125;\n&quot;</span> <span class="string">&quot;$list&quot;</span>|grep time_total|awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $2*1000&#125;&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ $httpcode = <span class="number">502</span> ]||[ $httpcode = <span class="number">503</span> ]||[ $httpcode = <span class="number">504</span> ]</span><br><span class="line">then</span><br><span class="line">   <span class="comment">#python /app/script/web_monit/sms.py $list &quot;$list 访问有误!状态码为$httpcode!请收到报警后尽快查看并处理!&quot;</span></span><br><span class="line">curl <span class="string">&#x27;https://oapi.dingtalk.com/robot/send?access_token=a36bb5e3ec13&amp;label=idc&amp;level=Warning&amp;msg_type=markdown&#x27;</span>  -H <span class="string">&quot;Content-Type:application/json&quot;</span>  -d <span class="string">&quot;&#123;\&quot;msgtype\&quot;: \&quot;text\&quot;, </span></span><br><span class="line"><span class="string">    \&quot;text\&quot;: &#123;</span></span><br><span class="line"><span class="string">     \&quot;content\&quot;: \&quot;$list 访问有误!状态码为$httpcode!请收到报警后尽快idc查看并处理!\&quot;&#125;, </span></span><br><span class="line"><span class="string">    \&quot;at\&quot;: &#123;</span></span><br><span class="line"><span class="string">        \&quot;atMobiles\&quot;: [</span></span><br><span class="line"><span class="string">            \&quot;130***61\&quot;, </span></span><br><span class="line"><span class="string">        ], </span></span><br><span class="line"><span class="string">        \&quot;isAtAll\&quot;: false</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">   echo <span class="string">&quot;$list is checked ok!&quot;</span></span><br><span class="line">fi</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ $httptime -ge <span class="number">10000</span> ]</span><br><span class="line">then</span><br><span class="line">   <span class="comment">#python /app/script/web_monit/sms.py $list &quot; $list访问超时!超时时间为$httptime毫秒!请收到报警后尽快查看并处理!&quot;</span></span><br><span class="line">curl <span class="string">&#x27;https://oapi.dingtalk.com/robot/send?access_token=a36bb53ec13&amp;label=idc&amp;level=Warning&amp;msg_type=markdown&#x27;</span>  -H <span class="string">&quot;Content-Type:application/json&quot;</span>  -d <span class="string">&quot;&#123;\&quot;msgtype\&quot;: \&quot;text\&quot;, </span></span><br><span class="line"><span class="string">    \&quot;text\&quot;: &#123;</span></span><br><span class="line"><span class="string">     \&quot;content\&quot;: \&quot;$list 访问超时!超时时间为$httptime毫秒!请收到报警后尽快查看并处理!\&quot;&#125;, </span></span><br><span class="line"><span class="string">    \&quot;at\&quot;: &#123;</span></span><br><span class="line"><span class="string">        \&quot;atMobiles\&quot;: [</span></span><br><span class="line"><span class="string">            \&quot;130***61\&quot;, </span></span><br><span class="line"><span class="string">        ], </span></span><br><span class="line"><span class="string">        \&quot;isAtAll\&quot;: false</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  echo <span class="string">&quot;$list is connect ok!&quot;</span></span><br><span class="line">fi</span><br><span class="line">done</span><br></pre></td></tr></table></div></figure>

]]></content>
      <tags>
        <tag>监控</tag>
      </tags>
  </entry>
</search>
